scala> flightsDF.show
dofM dofW carrier tailnum flnum org_id origin dest_id dest crsdeptime deptime depdelaymins crsarrtime arrtime arrdelay crselapsedtime dist
1    3    AA      N338AA  1     12478  JFK    12892   LAX  900.0      914.0   14.0         1225.0     1238.0  13.0     385.0          2475
2    4    AA      N338AA  1     12478  JFK    12892   LAX  900.0      857.0   0.0          1225.0     1226.0  1.0      385.0          2475
4    6    AA      N327AA  1     12478  JFK    12892   LAX  900.0      1005.0  65.0         1225.0     1324.0  59.0     385.0          2475
5    7    AA      N323AA  1     12478  JFK    12892   LAX  900.0      1050.0  110.0        1225.0     1415.0  110.0    385.0          2475
6    1    AA      N319AA  1     12478  JFK    12892   LAX  900.0      917.0   17.0         1225.0     1217.0  0.0      385.0          2475
7    2    AA      N328AA  1     12478  JFK    12892   LAX  900.0      910.0   10.0         1225.0     1212.0  0.0      385.0          2475
8    3    AA      N323AA  1     12478  JFK    12892   LAX  900.0      923.0   23.0         1225.0     1215.0  0.0      385.0          2475
9    4    AA      N339AA  1     12478  JFK    12892   LAX  900.0      859.0   0.0          1225.0     1204.0  0.0      385.0          2475
10   5    AA      N319AA  1     12478  JFK    12892   LAX  900.0      929.0   29.0         1225.0     1245.0  20.0     385.0          2475
11   6    AA      N328AA  1     12478  JFK    12892   LAX  900.0      915.0   15.0         1225.0     1344.0  79.0     385.0          2475
12   7    AA      N338AA  1     12478  JFK    12892   LAX  900.0      854.0   0.0          1225.0     1208.0  0.0      385.0          2475
13   1    AA      N332AA  1     12478  JFK    12892   LAX  900.0      855.0   0.0          1225.0     1152.0  0.0      385.0          2475
14   2    AA      N339AA  1     12478  JFK    12892   LAX  900.0      853.0   0.0          1225.0     1144.0  0.0      385.0          2475
15   3    AA      N786AA  1     12478  JFK    12892   LAX  900.0      851.0   0.0          1225.0     1201.0  0.0      385.0          2475
16   4    AA      N783AA  1     12478  JFK    12892   LAX  900.0      856.0   0.0          1225.0     1216.0  0.0      385.0          2475
17   5    AA      N783AA  1     12478  JFK    12892   LAX  900.0      855.0   0.0          1225.0     1154.0  0.0      385.0          2475
18   6    AA      N783AA  1     12478  JFK    12892   LAX  900.0      854.0   0.0          1225.0     1156.0  0.0      385.0          2475
19   7    AA      N786AA  1     12478  JFK    12892   LAX  900.0      858.0   0.0          1225.0     1152.0  0.0      385.0          2475
20   1    AA      N783AA  1     12478  JFK    12892   LAX  900.0      855.0   0.0          1225.0     1209.0  0.0      385.0          2475
21   2    AA      N783AA  1     12478  JFK    12892   LAX  900.0      858.0   0.0          1225.0     1229.0  4.0      385.0          2475

scala> fltCountsql.show
[Stage 10:=============================>                            (1 + 1) / 2]15/12/22 01:47:18 WARN MemoryStore: Not enough space to cache rdd_19_1 in memory! (computed 92.0 MB so far)
dofM dest total                                                                 
17   ATL  1052 
16   ATL  1051 
13   ATL  1048 
23   ATL  1047 
27   ATL  1046 

scala>      avgdepdel.show()
origin avgdepdelay                                                              
ILG    61.70909090909091
MQT    46.44            
ALO    45.725           
AZO    38.8             
ART    36.48571428571429

scala> fltcarriers.collect()
res24: Array[org.apache.spark.sql.Row] = Array([FL], [MQ], [AA], [HA], [AS], [B6], [UA], [US], [OO], [VX], [WN], [DL], [EV], [F9])

scala> carrierMap.toString
res30: String = Map(DL -> 5, F9 -> 10, US -> 9, OO -> 2, B6 -> 0, AA -> 6, EV -> 12, FL -> 1, UA -> 4, MQ -> 8, WN -> 13, AS -> 3, VX -> 7, HA -> 11)

scala> originMap.toString
res32: String = Map(ROW -> 23, OAJ -> 144, GCC -> 231, SYR -> 80, TYR -> 267, TUL -> 179, STL -> 202, IDA -> 62, ICT -> 63, MQT -> 37, SWF -> 118, EKO -> 148, JFK -> 214, LGB -> 240, ISP -> 101, ART -> 288, ORD -> 233, STX -> 167, EGE -> 159, LWS -> 132, TWF -> 228, LAS -> 44, BET -> 286, GSP -> 117, DAY -> 128, KOA -> 251, BUR -> 295, DRO -> 276, PVD -> 30, BRD -> 78, SPS -> 1, CLD -> 183, SGF -> 86, CDV -> 221, STT -> 213, OTZ -> 278, AVL -> 198, BOI -> 12, PSP -> 150, SAF -> 40, FWA -> 146, MHT -> 185, SBN -> 205, RDM -> 181, PSG -> 60, LAX -> 294, BQN -> 293, HSV -> 256, RIC -> 6, BTM -> 216, LSE -> 33, FCA -> 56, JAC -> 110, ATL -> 273, CHA -> 113, BQK -> 96, MIA -> 175, GUC -> 281, SBP -> 162, BFL -> 74, DHN -> 51, FLG -> 152, BRO -> 274, LAN -> 191, FSM -> 15, RAP -> 285, EAU -> ...

scala> destMap.toString
res34: String = Map(ROW -> 23, OAJ -> 144, GCC -> 231, SYR -> 80, TYR -> 267, TUL -> 179, STL -> 202, IDA -> 62, ICT -> 63, MQT -> 37, SWF -> 118, EKO -> 148, JFK -> 214, LGB -> 240, ISP -> 101, ART -> 288, ORD -> 233, STX -> 167, EGE -> 159, LWS -> 130, TWF -> 228, LAS -> 44, BET -> 286, GSP -> 117, DAY -> 124, KOA -> 251, BUR -> 295, DRO -> 276, PVD -> 30, BRD -> 78, SPS -> 1, CLD -> 183, SGF -> 86, CDV -> 221, STT -> 213, OTZ -> 278, AVL -> 198, BOI -> 12, PSP -> 150, SAF -> 40, FWA -> 146, MHT -> 185, SBN -> 205, RDM -> 181, PSG -> 60, LAX -> 294, BQN -> 293, HSV -> 256, RIC -> 6, BTM -> 216, LSE -> 33, FCA -> 55, JAC -> 110, ATL -> 273, CHA -> 113, BQK -> 96, MIA -> 175, GUC -> 281, SBP -> 162, BFL -> 74, DHN -> 51, FLG -> 152, BRO -> 274, LAN -> 191, FSM -> 15, RAP -> 285, EAU -> ...

scala> mlprep.take(5)
res35: Array[Array[Double]] = Array(Array(0.0, 0.0, 2.0, 900.0, 1225.0, 6.0, 385.0, 214.0, 294.0), Array(0.0, 1.0, 3.0, 900.0, 1225.0, 6.0, 385.0, 214.0, 294.0), Array(1.0, 3.0, 5.0, 900.0, 1225.0, 6.0, 385.0, 214.0, 294.0), Array(1.0, 4.0, 6.0, 900.0, 1225.0, 6.0, 385.0, 214.0, 294.0), Array(0.0, 5.0, 0.0, 900.0, 1225.0, 6.0, 385.0, 214.0, 294.0))

scala> trainingData.take(3)
res36: Array[org.apache.spark.mllib.regression.LabeledPoint] = Array((0.0,[0.0,2.0,900.0,1225.0,6.0,385.0,214.0,294.0]), (0.0,[1.0,3.0,900.0,1225.0,6.0,385.0,214.0,294.0]), (1.0,[3.0,5.0,900.0,1225.0,6.0,385.0,214.0,294.0])

scala> model.toDebugString
res47: String = 
"DecisionTreeModel classifier of depth 9 with 915 nodes
  If (feature 0 in {11.0,12.0,13.0,14.0,15.0,16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,24.0,25.0,26.0,27.0,30.0})
   If (feature 4 in {0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,13.0})
    If (feature 2 <= 1148.0)
     If (feature 0 in {11.0,12.0,13.0,14.0,15.0,16.0,17.0,18.0,19.0})
      If (feature 6 in {0.0,2.0,3.0,4.0,5.0,6.0,8.0,10.0,11.0,12.0,15.0,16.0,17.0,18.0,19.0,21.0,23.0,24.0,25.0,26.0,28.0,30.0,31.0,34.0,35.0,36.0,39.0,40.0,41.0,43.0,44.0,45.0,46.0,47.0,48.0,49.0,50.0,52.0,53.0,54.0,55.0,56.0,57.0,58.0,59.0,61.0,62.0,63.0,64.0,65.0,66.0,67.0,68.0,69.0,70.0,71.0,72.0,73.0,74.0,75.0,76.0,78.0,79.0,80.0,81.0,82.0,83.0,86.0,87.0,88.0,89.0,90.0,91.0,92.0,93.0,95.0,98.0,99.0,100.0,102.0,103.0,104.0,105....


scala>     println("Test Error = " + testErr)
Test Error = 0.30887352674524027      



